#BlueJ class context
comment0.target=Puzzle
comment0.text=\r\n\ This\ class\ represents\ a\ puzzle\ simulator\ with\ tiles,\ including\ initial\ and\ final\ boards,\r\n\ movable\ tiles,\ holes,\ and\ glue.\ It\ allows\ operations\ such\ as\ adding,\ removing,\ moving\ tiles,\r\n\ and\ applying\ or\ removing\ glue.\r\n
comment1.params=h\ w
comment1.target=Puzzle(int,\ int)
comment1.text=\r\n\ Constructor\ to\ initialize\ the\ boards\ without\ initial\ and\ final\ matrices.\r\n\ @param\ h\ Height\ of\ the\ board.\r\n\ @param\ w\ Width\ of\ the\ board.\r\n
comment10.params=row\ column
comment10.target=void\ deleteTile(int,\ int)
comment10.text=\r\n\ Removes\ a\ tile\ from\ the\ board\ at\ the\ specified\ position.\r\n\ @param\ row\ Row\ index\ of\ the\ tile.\r\n\ @param\ column\ Column\ index\ of\ the\ tile.\r\n
comment11.params=from\ to
comment11.target=void\ relocateTile(int[],\ int[])
comment12.params=fromTile\ toTile\ from\ to
comment12.target=void\ relocateTileMovement(Tile,\ Tile,\ int[],\ int[])
comment13.params=coords
comment13.target=boolean\ areValidCoordinates(int[])
comment14.params=row\ column
comment14.target=void\ addGlue(int,\ int)
comment15.params=row\ column
comment15.target=void\ deleteGlue(int,\ int)
comment16.params=tile
comment16.target=void\ updateAdjacentTiles(Tile)
comment17.params=tile
comment17.target=void\ updateAdjacentTilesAfterGlueRemoval(Tile)
comment18.params=tile
comment18.target=boolean\ isAdjacentToGlue(Tile)
comment19.params=color\ palenessFactor
comment19.target=java.awt.Color\ getPaleColor(java.awt.Color,\ int)
comment2.params=starting\ ending
comment2.target=Puzzle(char[][],\ char[][])
comment2.text=\r\n\ Constructor\ to\ initialize\ the\ boards\ with\ initial\ and\ final\ character\ matrices.\r\n\ @param\ starting\ Initial\ state\ of\ the\ board.\r\n\ @param\ ending\ Final\ state\ of\ the\ board.\r\n
comment20.params=direction
comment20.target=void\ tilt(char)
comment21.params=direction
comment21.target=boolean\ tiltOnce(char)
comment22.params=col
comment22.target=void\ tiltUpWithGlue(int)
comment23.params=col
comment23.target=void\ tiltDownWithGlue(int)
comment24.params=row
comment24.target=void\ tiltLeftWithGlue(int)
comment25.params=row
comment25.target=void\ tiltRightWithGlue(int)
comment26.params=row\ column\ group\ isGluedOrStuck
comment26.target=int\ calculateMaxMoveUp(int,\ int,\ java.util.List,\ boolean)
comment27.params=group\ isGluedOrStuck
comment27.target=int\ calculateMaxMoveUpGroup(java.util.List,\ boolean)
comment28.params=row\ column\ group\ isGluedOrStuck
comment28.target=int\ calculateMaxMoveDown(int,\ int,\ java.util.List,\ boolean)
comment29.params=group\ isGluedOrStuck
comment29.target=int\ calculateMaxMoveDownGroup(java.util.List,\ boolean)
comment3.params=ending
comment3.target=Puzzle(char[][])
comment3.text=\r\n\ Constructor\ to\ initialize\ an\ empty\ initial\ board\ and\ a\ final\ board\ with\ tiles.\r\n\ @param\ ending\ Final\ state\ of\ the\ board.\r\n
comment30.params=row\ column\ group\ isGluedOrStuck
comment30.target=int\ calculateMaxMoveLeft(int,\ int,\ java.util.List,\ boolean)
comment31.params=group\ isGluedOrStuck
comment31.target=int\ calculateMaxMoveLeftGroup(java.util.List,\ boolean)
comment32.params=row\ column\ group\ isGluedOrStuck
comment32.target=int\ calculateMaxMoveRight(int,\ int,\ java.util.List,\ boolean)
comment33.params=group\ isGluedOrStuck
comment33.target=int\ calculateMaxMoveRightGroup(java.util.List,\ boolean)
comment34.params=group\ steps
comment34.target=void\ moveGroupUp(java.util.List,\ int)
comment35.params=group\ steps
comment35.target=void\ moveGroupDown(java.util.List,\ int)
comment36.params=group\ steps
comment36.target=void\ moveGroupLeft(java.util.List,\ int)
comment37.params=group\ steps
comment37.target=void\ moveGroupRight(java.util.List,\ int)
comment38.params=tile\ group
comment38.target=void\ collectStuckGroup(Tile,\ java.util.List)
comment39.params=row\ column
comment39.target=Tile\ getTileAtPosition(int,\ int)
comment4.params=board\ tileList\ xOffset\ yOffset
comment4.target=void\ createTiles(char[][],\ java.util.List,\ int,\ int)
comment4.text=\r\n\ Method\ to\ create\ tiles\ in\ a\ list\ of\ lists,\ given\ the\ reference\ board.\r\n\ @param\ board\ Character\ matrix\ representing\ the\ board.\r\n\ @param\ tileList\ List\ of\ lists\ to\ store\ the\ created\ tiles.\r\n\ @param\ xOffset\ X\ offset\ for\ positioning\ the\ tiles.\r\n\ @param\ yOffset\ Y\ offset\ for\ positioning\ the\ tiles.\r\n
comment40.params=tile
comment40.target=boolean\ isTileEmpty(Tile)
comment41.params=
comment41.target=void\ resetVisitedFlags()
comment42.params=row\ column
comment42.target=Tile\ createEmptyTile(int,\ int)
comment43.params=message\ title
comment43.target=void\ showMessage(java.lang.String,\ java.lang.String)
comment43.text=\r\n\ Displays\ an\ error\ message\ if\ the\ simulator\ is\ visible.\r\n\ @param\ message\ The\ message\ to\ display.\r\n\ @param\ title\ The\ title\ of\ the\ message.\r\n
comment44.params=
comment44.target=boolean\ isGoal()
comment45.params=
comment45.target=void\ makeVisible()
comment46.params=
comment46.target=void\ makeInvisible()
comment47.params=
comment47.target=void\ finish()
comment48.params=
comment48.target=char[][]\ actualArrangement()
comment48.text=\r\n\ Devuelve\ una\ copia\ de\ la\ matriz\ actual\ de\ edici\u00F3n\ (starting),\r\n\ representando\ el\ estado\ actual\ del\ puzzle\ y\ pinta\ las\ baldosas.\r\n\ @return\ Una\ copia\ de\ la\ matriz\ starting.\r\n
comment49.params=
comment49.target=boolean\ ok()
comment5.params=
comment5.target=void\ createEmptyTiles()
comment5.text=\r\n\ Method\ to\ create\ empty\ tiles\ on\ the\ initial\ board.\r\n
comment50.params=
comment50.target=void\ exchange()
comment51.params=row\ column
comment51.target=void\ makeHole(int,\ int)
comment52.params=tile
comment52.target=void\ createHoleCircle(Tile)
comment53.params=
comment53.target=int[][]\ fixedTiles()
comment54.params=tile\ direction
comment54.target=boolean\ canTileMove(Tile,\ char)
comment55.params=
comment55.target=void\ printFixedTilesMatrix()
comment56.params=
comment56.target=int\ misplacedTiles()
comment57.params=args
comment57.target=void\ main(java.lang.String[])
comment6.params=
comment6.target=void\ createEmptyreferingTiles()
comment6.text=\r\n\ Method\ to\ create\ empty\ reference\ tiles\ on\ the\ reference\ board.\r\n
comment7.params=
comment7.target=int\ getHeight()
comment7.text=\r\n\ Gets\ the\ height\ of\ the\ board.\r\n\ @return\ Height\ of\ the\ board.\r\n
comment8.params=
comment8.target=int\ getWidth()
comment8.text=\r\n\ Gets\ the\ width\ of\ the\ board.\r\n\ @return\ Width\ of\ the\ board.\r\n
comment9.params=row\ column\ label
comment9.target=void\ addTile(int,\ int,\ char)
comment9.text=\r\n\ Adds\ a\ tile\ to\ the\ board\ at\ the\ specified\ position.\r\n\ @param\ row\ Row\ index\ of\ the\ tile.\r\n\ @param\ column\ Column\ index\ of\ the\ tile.\r\n\ @param\ label\ Label\ of\ the\ tile.\r\n
numComments=58
